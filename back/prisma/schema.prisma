// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int  @id @unique
  username            String
  secretO2FA          String?
  avatar              String
  xp                  Int
  userMatches       UserMatch[]
  friendsInitiated  Friendship[]  @relation("friendshipInitiator")
  friendsAccepted   Friendship[]  @relation("friendshipAcceptor")
  channels          UserChannel[]  // This represents all channels a user is a part of
  createdChannels   Channel[]      // Channels that the user has created
  messages          Message[]
}

model UserMatch {
  id           Int    @id @default(autoincrement())
  userId    Int
  matchId  Int
  score      Int
  user        User   @relation(fields: [userId], references: [id])
  match     Match  @relation(fields: [matchId], references: [id])
}

model Match {
  id                   Int          @id @default(autoincrement())
  userMatches UserMatch[]
}

model Friendship {
  id                Int    @id @default(autoincrement())
  state           int [PENDING, ACCEPTED, BLOCKED]
  userList        User[]
  initiator        User
  initiatorId      Int
  acceptorId       Int
  initiator        User   @relation("friendshipInitiator", fields: [initiatorId], references: [id])
  acceptor         User   @relation("friendshipAcceptor", fields: [acceptorId], references: [id])
}

model Channel {
  id          Int           @id @default(autoincrement())
  creatorId   Int
  creator     User          @relation(fields: [creatorId], references: [id])
  users       UserChannel[] 
  messages    Message[]
}

model UserChannel {
  userId    Int
  channelId Int
  isAdmin   Boolean
  isBlocked Boolean  
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])

  @@id([userId, channelId])
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  channelId Int
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}